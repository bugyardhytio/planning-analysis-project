count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay <- filter(delay, count > 20, dest != "HNL")
ggplot(data = delay, mapping = aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
ggplot(data = delays, mapping = aes(x = delay)) +
geom_freqpoly(binwidth = 10)
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay, na.rm = TRUE),
n = n()
)
ggplot(data = delays, mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
delays %>%
filter(n > 25) %>%
ggplot(mapping = aes(x = n, y = delay)) +
geom_point(alpha = 1/10)
jakut  <- c("cilincing", "koja", "kelapa.gading", "tanjung.priok", "pademangan", "penjaringan")
jakut  <- c("cilincing", "koja", "kelapa.gading", "tanjung.priok", "pademangan", "penjaringan")
library(modelr)
options(na.action = na.warn)
ggplot(sim1, aes(x, y)) +
geom_point()
models <- tibble(
a1 = runif(250, -20, 40),
a2 = runif(250, -5, 5)
)
?runif
runif(250, -20, 40)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
model1 <- function(a, data) {}
model1 <- function(a, data) {
a[1] + data$x * a[2]
}
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = diamonds) + geom_bar(aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds, mapping = aes(x = cut, fill = clarity)) +
geom_bar(alpha = 1/5, position = "identity")
ggplot(data = diamonds, mapping = aes(x = cut, colour = clarity)) +
geom_bar(fill = NA, position = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter")
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_jitter()
?geom_jitter
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
nz <- map_data("nz")
batting <- as_tibble(Lahman::Batting)
batters <- batting %>%
group_by(playerID) %>%
summarise(
ba = sum(H, na.rm = TRUE) / sum(AB, na.rm = TRUE),
ab = sum(AB, na.rm = TRUE)
)
batters %>%
filter(ab > 100) %>%
ggplot(mapping = aes(x = ab, y = ba)) +
geom_point() +
geom_smooth(se = FALSE)
batters %>%
arrange(desc(ba))
not_cancelled %>%
group_by(dest) %>%
summarise(distance_sd = sd(distance)) %>%
arrange(desc(distance_sd))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(
first = min(dep_time),
last = max(dep_time)
)
not_cancelled %>%
group_by(year, month, day) %>%
summarise(
first_dep = first(dep_time),
last_dep = last(dep_time)
)
not_cancelled %>%
group_by(year, month, day) %>%
mutate(r = min_rank(desc(dep_time))) %>%
filter(r %in% range(r))
not_cancelled %>%
group_by(dest) %>%
summarise(carriers = n_distinct(carrier)) %>%
arrange(desc(carriers))
not_cancelled %>%
count(dest)
not_cancelled %>%
count(tailnum, wt = distance)
diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonds %>%
count(cut)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
smaller <- diamonds %>%
filter(carat < 3)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = carat, colour = cut)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01)
ggplot(data = faithful, mapping = aes(x = eruptions)) +
geom_histogram(binwidth = 0.25)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)\
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50))
unusual <- diamonds %>%
filter(y < 3 | y > 20) %>%
select(price, x, y, z) %>%
arrange(y)
unusual
ggplot(data = diamonds, mapping = aes(x = price, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 500)
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy))
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy)) +
coord_flip()
ggplot(data = diamonds) +
geom_count(mapping = aes(x = cut, y = color))
count(color, cut) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
diamonds %>%
count(color, cut) %>%
ggplot(mapping = aes(x = color, y = cut)) +
geom_tile(mapping = aes(fill = n))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), alpha = 1 / 100)
ggplot(data = smaller) +
geom_bin2d(mapping = aes(x = carat, y = price))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_width(carat, 0.1)))
ggplot(data = smaller, mapping = aes(x = carat, y = price)) +
geom_boxplot(mapping = aes(group = cut_number(carat, 20)))
ggplot(data = faithful) +
geom_point(mapping = aes(x = eruptions, y = waiting))
?lm
mod <- lm(log(price) ~ log(carat), data = diamonds)
diamonds2 <- diamonds %>%
add_residuals(mod) %>%
mutate(resid = exp(resid))
ggplot(data = diamonds2) +
geom_point(mapping = aes(x = carat, y = resid))
ggplot(data = diamonds2) +
geom_boxplot(mapping = aes(x = cut, y = resid))
library(tidyverse)
data <- read.csv(file.choose(), skip = 26)
raw <- data
data <- read.csv(file.choose(), skip = 26)
raw <- data
data[, c(1, 4, 47, 48, 49, 50)] <- NULL
data <- as.tibble(data)
jakut  <- c("cilincing", "koja", "kelapa.gading", "tanjung.priok", "pademangan", "penjaringan")
jaktim <- c("cipayung", "ciracas", "makasar", "pasar.rebo", "duren.sawit", "kramat.jati", "cakung", "jatinegara", "pulo.gadung", "matraman")
jaksel <- c("tebet", "pasar.minggu", "pancoran", "mampang.prapatan", "setiabudi", "cilandak", "kebayoran.baru", "kebayoran.lama", "pesanggrahan", "jagakarsa")
jakpus <- c("menteng", "gambir", "senen", "cempaka.putih", "kemayoran", "tanah.abang", "johar.baru", "sawah.besar")
jakbar <- c("taman.sari", "tambora", "palmerah", "grogol.petamburan", "kalideres", "kembangan", "cengkareng", "kebon.jeruk")
names(data) <- c("minute", "hour", jakut, jaktim, jaksel, jakpus, jakbar)
data <- data %>%
group_by(hour, kecamatan) %>%
gather(key = "kecamatan", value = "populasi", -hour, -minute, -x)
library(tidyverse)
data <- read.csv(file.choose(), skip = 26)
library(tidyverse)
data <- read.csv(file.choose(), skip = 26)
raw <- data
data[, c(1, 4, 47, 48, 49, 50)] <- NULL
data <- as.tibble(data)
jakut  <- c("cilincing", "koja", "kelapa.gading", "tanjung.priok", "pademangan", "penjaringan")
jaktim <- c("cipayung", "ciracas", "makasar", "pasar.rebo", "duren.sawit", "kramat.jati", "cakung", "jatinegara", "pulo.gadung", "matraman")
jaksel <- c("tebet", "pasar.minggu", "pancoran", "mampang.prapatan", "setiabudi", "cilandak", "kebayoran.baru", "kebayoran.lama", "pesanggrahan", "jagakarsa")
jakpus <- c("menteng", "gambir", "senen", "cempaka.putih", "kemayoran", "tanah.abang", "johar.baru", "sawah.besar")
jakbar <- c("taman.sari", "tambora", "palmerah", "grogol.petamburan", "kalideres", "kembangan", "cengkareng", "kebon.jeruk")
names(data) <- c("minute", "hour", jakut, jaktim, jaksel, jakpus, jakbar)
data <- data %>%
group_by(hour, kecamatan) %>%
gather(key = "kecamatan", value = "populasi", -hour, -minute, -x)
data
data <- data %>%
gather( -hour, -minute, key = "kecamatan", value = "populasi") %>%
group_by(hour, kecamatan) %>%
summarise(populasi = mean(populasi)) #Aggregate by hour
source('~/R/analisis.R', echo=TRUE)
y <- vector()
for (i in seq_along(kotamadya)){
for (j in kotamadya[[i]]) {
x <- data %>%
filter(kecamatan == j) %>%
mutate(kotamadya = kotamadya.name[i])
y <- rbind(y, x)
}
}
kotamadya <- c(jakut, jaktim, jaksel, jakpus, jakbar)
kotamadya.name <-c("jakarta.utara", "jakarta.timur", "jakarta.selatan", "jakarta.pusat", "jakarta.barat")
y <- vector()
for (i in seq_along(kotamadya)){
for (j in kotamadya[[i]]) {
x <- data %>%
filter(kecamatan == j) %>%
mutate(kotamadya = kotamadya.name[i])
y <- rbind(y, x)
}
}
data <- y[, c(1,2,4,3)]
data %>%
transform(kecamatan=factor(kecamatan,levels=c(jakut, jaktim, jaksel, jakpus, jakbar))) %>%
ggplot(aes(x = hour, y = populasi)) +
geom_line(aes(color = kotamadya)) +
facet_wrap(~ kecamatan)
data
View(data)
View(y)
for (i in seq_along(kotamadya)){
for (j in kotamadya[[i]]) {
x <- data %>%
filter(kecamatan == j) %>%
mutate(kotamadya = kotamadya.name[i])
y <- rbind(y, x)
}
}
data <- y[, c(1,2,4,3)]
y <- vector()
for (i in seq_along(kotamadya)){
for (j in kotamadya[[i]]) {
x <- data %>%
filter(kecamatan == j) %>%
mutate(kotamadya = kotamadya.name[i])
y <- rbind(y, x)
}
}
data <- y[, c(1,2,4,3)]
y <- vector()
for (i in seq_along(kotamadya)){
for (j in kotamadya[[i]]) {
x <- data %>%
filter(kecamatan == j) %>%
mutate(kotamadya = kotamadya.name[i])
y <- rbind(y, x)
}
}
View(y)
experiment.A <- read.csv("Eksperimen/A.csv", skip = 26)
library(tidyverse)
data <- read.csv(file.choose(), skip = 26)
data <- file.choose("data/ekperimen/Mei/30 Mei/output.csv")
data <- read.csv("data/ekperimen/Mei/30 Mei/output.csv")
data <- read.csv("data/ekperimen/Mei/30 Mei/output.csv")
twitter <- read.csv("data/twitter.csv")
twitter <- as.tibble(twitter)
names(twitter) <- c("kecamatan", "kotaadm", "did", "numpoints", "persentase")
twitter$kecamatan <- twitter$kecamatan %>%
str_to_lower() %>%
str_replace_all("_", ".")
library(tidyverse)
data <- file.choose()
data <- file.choose()
file <- data
data <- read.csv(file)
data
data[,5]
head(data)
data <- data[,1:7]
data
as.tibble(data)
data <- as.tibble(data)
kepadatankec <- data %>%
group_by(NAMA.KECAMATAN) %>%
View(data)
summarise(kepadatan = sum(KEPADATAN.JIWA.KM2))
data[,7]
summarise(kepadatan = sum(KEPADATAN..JIWA.KM2))
kepadatankec <- data %>% group_by(NAMA.KECAMATAN) %>% summarise(kepadatan = sum(KEPADATAN..JIWA.KM2.))
View(kepadatankec)
View(data)
data <- names("Tahun", "Provinsi", "Kotaadm", "Kecamatan", "Kelurahan", "Luaskm2", "Kepadatankm2")
data <- names("Tahun", "Provinsi", "Kotaadm", "Kecamatan", "Kelurahan", "Luaskm2", "Kepadatankm2")
names(data) <- c("Tahun", "Provinsi", "Kotaadm", "Kecamatan", "Kelurahan", "Luaskm2", "Kepadatankm2")
data %>% mutate(jumlahpenduduk = luaskm2 * kepadatan)
data %>% mutate(jumlahpenduduk = Luaskm2 * Kepadatankm2)
data <- data %>% mutate(jumlahpenduduk = Luaskm2 * Kepadatankm2)
View(data)
kepadatankec <- data %>% group_by(NAMA.KECAMATAN) %>% summarise(KotaAdm = Kotaadm, luas = sum(Luaskm2), jumlahpdd = sum(jumlahpenduduk))
kepadatankec <- data %>% group_by("Kecamatan") %>% summarise(KotaAdm = Kotaadm, luas = sum(Luaskm2), jumlahpdd = sum(jumlahpenduduk))
kepadatankec <- data %>% group_by("Kecamatan") %>% summarise(luas = sum(Luaskm2), jumlahpdd = sum(jumlahpenduduk))
View(kepadatankec)
kepadatankec <- data %>% group_by(Kecamatan) %>% summarise(luas = sum(Luaskm2), jumlahpdd = sum(jumlahpenduduk))
View(kepadatankec)
kepadatankec <- kepadatankec %>% mutate(kepadatan = jumlahpdd / luas)
View(kepadatankec)
install.packages("data.world")
saved_cfg <- data.world::save_config("eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJyLWFuZC1yLXN0dWRpbzpidWd5YXJkaHl0aW8iLCJpc3MiOiJjbGllbnQ6ci1hbmQtci1zdHVkaW86YWdlbnQ6YnVneWFyZGh5dGlvOjpiMjE0N2M2ZC04OGUwLTQyOTktOGQwYy0yZjIwZTExOTJiN2QiLCJpYXQiOjE1NDc4OTA1OTEsInJvbGUiOlsidXNlcl9hcGlfYWRtaW4iLCJ1c2VyX2FwaV9yZWFkIiwidXNlcl9hcGlfd3JpdGUiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlLCJzYW1sIjp7fX0.0zNYgC5WIhvnb2DDolAQoFBYyaEL7RJNff7fRJCh4tats3uf0_lq47e4AoVl3KdBIm184jTPpzO1WSMN1tG3ww")
data.world::set_config(saved_cfg)
library(data.world)
vignette("quickstart", package = "data.world")
intro_ds <- "https://data.world/jonloyens/an-intro-to-dataworld-dataset"
team_df <- data.world::query(
data.world::qry_sql("SELECT * FROM DataDotWorldBBallTeam"),
dataset = intro_ds
)
team_df
devtools::install_github("tidyverse/ggplot2")
install.library("sf")
install.packages("sf")
install.packages("units")
install.packages("units")
install.packages("sf")
library(sf)
install.packages("sp")
install.packages("raster")
install.packages("tmap", dependencies = TRUE)
require("devtools")
install.packages("tmap", dependencies = TRUE)
install.packages("ggmaps")
install.packages("ggmap")
library(ggmap)
geocode("Surabaya")
geocode("New York")
geocode("350 5th Ave, New York, NY 10118")
?geocode
geocode("350 5th Ave, New York, NY 10118", source = "google")
geocode("350 5th Ave, New York, NY 10118", source = "dsk")
geocode("Surabaya", source = "dsk")
geocode("Surabaya", output = "more", source = "dsk")
install.packages("leaflet")
library(leaflet)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
geocode("Kemang, Jakarta", source = "google")
geocode("Kemang, Jakarta", source = "dsk")
kemang <- geocode("Kemang, Jakarta", source = "dsk")
kemang
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
bapus <- geocode("Bambu Apus, Cipayung, Jakarta", source = "dsk")
source('~/.active-rstudio-document', echo=TRUE)
kemang <- geocode("Jl. Kemang Timur, Jakarta", source = "dsk")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(tidyr)
?spread
vignette("databases", package = "dplyr")
install.package("purr")
install.package("purrr")
install.packages("purrr")
source('~/R/magangRCUS/penjaringan/data/demografi/data-cleaning-penduduk-usia.R', echo=TRUE)
df
setwd("~/R/magangRCUS/penjaringan/data/demografi/per-usia")
# Import and Cleaning Data ---------------------------------
data2013 <- read_csv("penduduk_2013.csv")
data2014 <- read_csv("penduduk_2014.csv")
data2015 <- read_csv("penduduk_2015.csv")
data2016 <- read_csv("penduduk_2016.csv")
data2017 <- read_csv("penduduk_2017.csv")
# --  Matching column name
nama.kolom <- c("tahun", "provinsi", "kabupaten", "kecamatan", "kelurahan", "usia", "jenisKelamin", "jumlah")
datalist <- list(data2013, data2014, data2015, data2016, data2017)
for (i in 1:length(datalist)) {
colnames(datalist[[i]]) <- nama.kolom
}
## Joining data
df <- bind_rows(datalist)
source('~/R/magangRCUS/penjaringan/data/demografi/data-cleaning-penduduk-usia.R', echo=TRUE)
df
library(ggplot2)
library(tidyr)
edf <- df %>%
select(-provinsi) %>%
filter(tahun > 2013)
dfKec <- edf %>%
select(kelurahan, kecamatan) %>%
distinct(kelurahan, kecamatan)
dfKab <- edf %>%
select(kelurahan, kabupaten) %>%
distinct(kelurahan, kabupaten)
edf2017 <- edf %>%
filter(tahun == 2017)
# ---------------------------- piramida penduduk, rasio ketergantungan, sex ratio
## Rasio ketergantungan
### Bagaimana posisi dependency ratio kelurahan penjaringan dibanding kelurahan-kelurahan lain
depRatio <- edf %>%
mutate(usiaProduktif = ifelse(usia %in% c("0-4", "5-9", "10-14", "65-69", "70-74", ">75"), "Tidak", "Ya")) %>%
group_by(usiaProduktif, tahun) %>%
summarize(n = sum(jumlah)) %>%
ungroup() %>%
spread(usiaProduktif, n) %>%
mutate(dependencyRat = Tidak / Ya * 100) %>%
select(tahun, dependencyRat)
depRatioKelurahan <- edf %>%
mutate(usiaProduktif = ifelse(usia %in% c("0-4", "5-9", "10-14", "65-69", "70-74", ">75"), "Tidak", "Ya")) %>%
group_by(usiaProduktif, kelurahan) %>%
summarize(n = sum(jumlah)) %>%
ungroup() %>%
spread(usiaProduktif, n) %>%
mutate(dependencyRat = Tidak / Ya * 100) %>%
select(kelurahan, dependencyRat) %>%
arrange(dependencyRat)
edf %>%
group_by(tahun) %>%
summarize(jumlahPenduduk = sum(jumlah))
library(sf)
library(tmap)
library(RColorBrewer)
#-------------------------------
kelurahan <- st_read("~/R/magangRCUS/penjaringan/shapefile/batas-administrasi/batas_kelurahan.shp")
kelurahan <- select(kelurahan, keluraha_1, geometry)
colnames(kelurahan) <- c("kelurahan", "geometry")
kelurahan$kelurahan <- toupper(kelurahan$kelurahan)
kelurahan$kelurahan <- str_replace(kelurahan$kelurahan, "KALI DERES", "KALIDERES")
kelurahan$kelurahan <- str_replace(kelurahan$kelurahan, "PAL MERAH", "PALMERAH")
kelurahan$kelurahan <- str_replace(kelurahan$kelurahan, "HARAPAN MULYA", "HARAPAN MULIA")
kelurahan$kelurahan <- str_replace(kelurahan$kelurahan, "KALIANYAR", "KALI ANYAR")
purple <- list(color = brewer.pal(3, "Purples"))
# ---------------------------- piramida penduduk, rasio ketergantungan, sex ratio
## Rasio ketergantungan
#### Peta
shpDepRatio <- inner_join(kelurahan, depRatioKelurahan, by = "kelurahan")
shpDepRatio <- inner_join(shpDepRatio, dfKec, by = "kelurahan")
shpDepRatio <- inner_join(shpDepRatio, dfKab, by = "kelurahan")
shpDepRatio <- select(shpDepRatio, kelurahan, kecamatan, kabupaten, dependencyRat, geometry)
shpDepRatio %>%
filter(grepl("JAKARTA", kabupaten)) %>%
ggplot(aes(fill = dependencyRat)) +
geom_sf() +
scale_fill_gradient(low = "red", high = "wheat1")
shpDepRatio %>%
filter(grepl("JAKARTA", kabupaten)) %>%
tm_shape() +
tm_fill(col = "dependencyRat")
# ----------------------------- Basic stat
# Jumlah penduduk per kelurahan per tahun
shpPendKel <- inner_join(kelurahan, pendudukKel, by = "kelurahan")
shpPendKel <- select(shpPendKel, tahun, kelurahan, kecamatan, kabupaten, jumlahPenduduk, geometry)
shpPendKel %>%
filter(grepl("JAKARTA", kabupaten)) %>%
tm_shape() +
tm_fill(col = "jumlahPenduduk") +
tm_facets("tahun")
pendudukKel <- edf %>%
group_by(tahun, kelurahan, kecamatan, kabupaten) %>%
summarize(jumlahPenduduk = sum(jumlah))
shpPendKel <- inner_join(kelurahan, pendudukKel, by = "kelurahan")
shpPendKel <- select(shpPendKel, tahun, kelurahan, kecamatan, kabupaten, jumlahPenduduk, geometry)
shpPendKel %>%
filter(grepl("JAKARTA", kabupaten)) %>%
tm_shape() +
tm_fill(col = "jumlahPenduduk") +
tm_facets("tahun")
